version: '3'
services:
  app:
    build:
      context: ./  # Use the current directory as the build context
      dockerfile: Dockerfile
    ports:
      - "8000"  # Map container port 8000 to host, let the scaling generate new ones into the container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis

  redis:
    image: "redis:alpine"
    restart: always
    volumes:
      - ./redis_data:/data
    command: redis-server --save 15 1 --loglevel warning
    ports:
      - "6001:6379"

  nginx:
    image: nginx
    volumes:
      - ./nginx.docker.conf:/etc/nginx/nginx.conf:ro
      - ./letsencrypt:/etc/letsencrypt:ro  # Mount Let's Encrypt directory as read-only
      - ./var/www/certbot:/var/www/certbot:ro
    ports:
      - "80:80"  # For HTTP challenge
      - "443:443"
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt  # Mount Let's Encrypt directory
      - ./var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot --agree-tos --no-eff-email --email powprashant@gmail.com -d stocks.eastus.cloudapp.azure.com; sleep 12h; done'"